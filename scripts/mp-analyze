#!/usr/bin/perl
use strict;
use warnings;

die "Usage: $0 <testdir>\n" unless @ARGV > 0;

my $int = 300;
chdir $ARGV[0] or die "Test directory could not be accessed: $!";

my %ifaces = ();
open my $iwc, '<', 'iwconfig.log';
while (<$iwc>) {
  next if /^\s/;
  next if /ESSID:off/;
  /^(\S+).*ESSID:"([^"]+)"/;
  $ifaces{$1} = {essid => $2, data => ""};
  open $ifaces{$1}->{'file'}, '>', "$1.dat";
}
close $iwc;

my %iptoif = ();
open my $ips, '<', 'ips.log';
my $if;
while (<$ips>) {
  $if = $1 if /^\d+: (.*?):/ and defined $ifaces{$1};
  next if not defined $if;
  if (/inet (.*?)\//) {
    $ifaces{$if}->{'ip'} = $1;
    $iptoif{$ifaces{$if}->{'ip'}} = $if;
  } else {
    next;
  }
}
close $ips;

my %last = ();

my $reads=`zcat stats.log.gz | grep -P '^\\.\$' | wc -l`;
my $line=0;

my $time = 0;
my $rmod = 0;
my $ran5 = 0;
open my $tcp, '-|', 'zcat tcpdump.pcap.gz';
open my $stats, '-|', 'zcat stats.log.gz';
while (<$stats>) {
  if (/^\;$/) {
    $rmod++;
    next;
  }

  if (/^\.$/) {
    $rmod = 0;
    # loop through tcpdumps up to this point
    # calculate distribution and print
    $last{'in_total'} = 0;
    $last{'out_total'} = 0;
    foreach $if (values %ifaces) {
      $if->{'out'} = 0;
      $if->{'in'} = 0;
    }

    my $b;
    my $e;
    while (<$tcp>) {
      /^(\d+\.\d+) (\w+) (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\.\d+ \> (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\.\d+: (\w+) (\d+)$/;
      next if $2 ne "IP" or $5 ne "tcp";

      my $ip = defined $iptoif{$3} ? $3 : $4;
      next if not defined $iptoif{$ip};

      $b = $1 if not defined $b;
      $e = $1;

      # TODO: Avoid skipping last record of every interval
      last if $1 > $time;

      $if = $iptoif{$ip};
      $ifaces{$if}->{$ip eq $3 ? 'out' : 'in'} += $6;
    }

    foreach $if (values %ifaces) {
      $last{'in_total'} += $if->{'in'};
      $last{'out_total'} += $if->{'out'};
      $if->{'data'} .= "0 0 " if not $ran5;
    }
    $ran5 = 0;

    my $tdiff = 0;
    $tdiff = $e - $b if defined $b;
    foreach $if (values %ifaces) {
      if (defined $b and $e > $b) {
        my $o = $if->{'out'} > 0 ? 100*$if->{'out'}/$last{'out_total'} : 0;
        my $i = $if->{'in'} > 0 ? 100*$if->{'in'}/$last{'in_total'} : 0;
        my $ot = $if->{'out'}/$tdiff;
        my $it = $if->{'in'}/$tdiff;
        $if->{'data'} .= sprintf "%.1f %.1f %.1f %.1f\n", $o, $i, $ot, $it;
      } else {
        $if->{'data'} .= "0 0 0 0\n";
      }
    }

    foreach $if (values %ifaces) {
      my $f = $if->{'file'};
      print $f $if->{'data'};
      $if->{'data'} = "";
    }

    print "$line/$reads";
    $line++;
    next;
  }

  if (0) { # to align below
  } elsif ($rmod == 0) {
    # date
    /^(\d+\.\d+)$/;
    $time = $1;

    foreach $if (values %ifaces) {
      $if->{'data'} .= sprintf "%d ", $1;
    }
  } elsif ($rmod == 1) {
    # iwconfig
    # iface,frequency,bssid,speed,txpower,link-quality,signal-level
    my @d = split /,/;
    $if = $d[0];

    $d[3] =~ /^(\d+)/;
    my $speed = $1;

    $d[5] =~ /^(\d+)\//;
    my $qlty = $1;

    $d[6] =~ /^(-\d+)/;
    my $sgnl = $1;

    $ifaces{$if}->{'data'} .= sprintf "%d %d %d ", $speed, $qlty, $sgnl;
  } elsif ($rmod == 2) {
    # /proc/net/dev
    # iface,rx-b,rx-p,rx-err,rx-drop,#,#,#,#,tx-b,tx-p,tx-err,...
    next;
  } elsif ($rmod == 3) {
    # /proc/net/wireless
    # iface,status,link,level,noise,err-nwid,err-crypt,err-frag,err-retry,err-misc,missed,WE
    my @d = split /,/;
    $if = $d[0];
    if (not defined $ifaces{$if}) {
      $ifaces{$if}->{'data'} .= "0 0 ";
      next;
    }

    my $retry = $d[8];
    $retry = 0 if not defined $last{"retry-$if"}; # So we don't have an initial spike
    $retry -= $last{"retry-$if"} if defined $last{"retry-$if"};
    $last{"retry-$if"} = $d[8];

    my $misc = $d[9];
    $misc = 0 if not defined $last{"misc-$if"};
    $misc -= $last{"misc-$if"} if defined $last{"misc-$if"};
    $last{"misc-$if"} = $d[9];

    $ifaces{$if}->{'data'} .= sprintf "%d %d ", $retry, $misc;
  } elsif ($rmod == 4) {
    # /proc/net/netstat
    my @d = split / /;

    my $fast_rt = $d[44];
    $fast_rt = 0 if not defined $last{'fast-rt'};
    $fast_rt -= $last{'fast-rt'} if defined $last{'fast-rt'};
    $last{'fast_rt'} = $d[44];

    my $slow_rt = $d[46];
    $slow_rt = 0 if not defined $last{'slow-rt'};
    $slow_rt -= $last{'slow-rt'} if defined $last{'slow-rt'};
    $last{'slow_rt'} = $d[46];

    foreach $if (values %ifaces) {
      $if->{'data'} .= sprintf "%d %d ", $fast_rt, $slow_rt;
    }
  } elsif ($rmod == 5) {
    # ss -inot
    if (/^\S/) {
      # connection line
      my $ip;
      while (/(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})/) {
        $ip = $1;
        next if not defined $iptoif{$ip};
        $if = $iptoif{$ip};
        last;
      }
      # Don't include control port
      $if = undef if /:12865/;
      $ran5 = 1;
    } elsif (defined $if and /rtt:/) {
      # extended info line
      /rtt:([\d\.]+)/;
      $ifaces{$if}->{'data'} .= sprintf "%d ", $1;
      if (/rcv_rtt:([\d\.]+)/) {
        $ifaces{$if}->{'data'} .= sprintf "%d ", $1;
      } else {
        $ifaces{$if}->{'data'} .= "0 ";
      }
    }
  }
}

foreach $if (values %ifaces) {
  my $f = $if->{'file'};
  close $f;
}
