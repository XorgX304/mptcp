#!/bin/bash
base="$(dirname "$0")"
base="$(realpath "$base")"

if [[ $# -eq 0 ]]; then
  echo "Usage: $(basename "$0") [-n] UP|DOWN [SET-SET]..."
  echo "Merges common sets from each set of sets given"
  echo "-n can be given to normalize results"
  exit 1
fi

normalize=""
if [[ $1 == "-n" ]]; then
  normalize="-n"
  shift
fi

updown=$1
shift

datadir=`realpath ~/Dropbox/MPTCP/data/`
for t in 5 ni i; do
  for c in reno coupled; do
    sets=()
    for s in "$@"; do
      sets+=("$s"/$t-*$c*)
    done

    for h in both high low; do
      echo -e "\n\e[1mAggregating into $t-$c-$h\e[0m"

      args=()
      for s in "${sets[@]}"; do
        [[ -e "$s" ]] || continue

        rs="$(realpath "$s")"
        setname="$(echo "$rs" | sed "s|^$datadir/*||")"

        fs=("$s"/*parallel*-$updown/iwconfig.log)
        if [[ ! -e "${fs[0]}" ]]; then
          fs=("$s"/*parallel*/iwconfig.log)
          if [[ ! -e "${fs[0]}" ]]; then
            echo -e "\e[31mSkipping incomplete set $setname with no parallel iwconfig\e[0m" >> /dev/stderr
          else
            echo -e "\e[33mSkipping set $setname (wrong direction)\e[0m" >> /dev/stderr
          fi
          continue
        fi

        high="$(mp-high "$updown" "$s" | sed 's/.*: //')"
        low="$(cat "$s"/*parallel*/iwconfig.log | \
                grep 'ESSID:"' | \
                grep -v -- "$high-wifi" | \
                sed 's/^.*ESSID:"//' | \
                sed 's/\(-wifi\)*".*//')"

        # Skip tests with more than two aps
        if [[ $(echo -e "$high\n$low" | grep -vP '^$' | wc -l) -ne 2 ]]; then
          echo -e "\e[31mRefusing to merge broken set $setname with <> 2 aps: $(echo $high) $(echo $low)\e[0m" >> /dev/stderr
          continue
        fi

        if [[ $h != "both" ]]; then
          echo -e " \e[37m${!h}\e[0m from \e[37m$setname\e[0m"
        else
          echo -e " \e[37m$setname\e[0m"
        fi

        args+=("$rs")
        if [[ $h == "high" ]]; then
          args+=("$high")
        elif [[ $h == "low" ]]; then
          args+=("$low")
        else
          args+=("$high")
          args+=("$rs")
          args+=("$low")
        fi
      done

      if [[ ${#args[@]} -eq 0 ]]; then continue; fi

      if [[ $h == "both" ]]; then
        hx=""
      else
        hx="-$h"
      fi

      rm -rf "$t-$c$hx"
      mkdir "$t-$c$hx"
      cd "$t-$c$hx"
      "$base/mp-merge" $normalize "$updown" "${args[@]}" > /dev/null
      cd ..
    done
  done
done

# vim:textwidth=0:
