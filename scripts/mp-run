#!/bin/bash
testlength=5400
printinterval=60
testname=$1
direction=$2
both="no"
base=`dirname $0`

if [[ $direction == 'both' ]]; then
  direction="up"
  both="yes"
fi

if [[ -z $1 || -z $2 ]]; then
  echo "Usage: $0 <name> <down|up>"
  exit 1
fi

if [[ -z $3 ]]; then
  echo "Running mp-routes"
  $base/mp-routes
  echo
fi

echo -e "\e[37m################################################\e[0m"
echo -e "\e[37m#\e[0m Preparing \e[37m${direction}\e[0mlink test \e[37m$testname\e[0m"

mkdir -p "$testname-$direction"
cd "$testname-$direction"

echo -en "\e[37m#\e[0m Finding primary local IP: "
ip=`ip addr | grep "inet 128.16.8" | sed 's/^[^0-9]*\([0-9\.]\+\).*$/\1/' | head -n1`

if [[ -z $ip ]]; then
  echo -e "\e[1;5;31mnone found!\e[0m"
  cd ..
  rm -rf "$testname-$direction"
  exit 1
else
  echo -e "\e[37m$ip\e[0m"
fi

echo -en "\e[37m#\e[0m Detecting testing server: "
ap=`iwconfig 2>/dev/null | grep "ESSID:" | grep -- "-wifi" | sed 's/^.*ESSID:"\(.*\)-wifi".*$/\1/'`

if [[ -z $a ]]; then
  echo -e "\e[1;31mundetectable\e[0m"
  echo -ne "\e[37m#\e[0m Use testing server \e[37m"
  read ap
  echo -en "\e[0m"
else
  echo -e "\e[37m$ap\e[0m"
fi

is=`iwconfig 2>&1 | grep ESSID | grep -v off | sed 's/^\([^ ]\+\) .*/\1/' | sort | head -n1`
echo -en "\e[37m#\e[0m Sampling wireless environment..."
sudo iwlist $is scan > iwlist.log
echo -e "\e[37m done\e[0m"

echo -en "\e[37m#\e[0m Logging ip addr..."
ip addr > ips.log
echo -e "\e[37m done\e[0m"

echo -en "\e[37m#\e[0m Logging iwconfig..."
iwconfig 2>/dev/null > iwconfig.log
echo -e "\e[37m done\e[0m"

if [[ $direction == "down" ]]; then
  echo -ne "\e[1m\e[37m#\e[0m Starting netserver locally for downlink test..."
  netserver > /dev/null 2> /dev/null
  echo -e "\e[37m done\e[0m"
fi

echo -en "\e[37m#\e[0m Starting tcpdump..."
$base/mp-tcpdump 2>/dev/null > tcp.dump &
echo -e "\e[37m done\e[0m"

if [[ $direction == "down" ]]; then
  echo -e "\e[37m#\e[0m Starting netperf on remote server"
else
  echo -e "\e[37m#\e[0m Starting netperf on local machine"
fi

echo -e "\e[37m################################################\e[0m"
echo -ne "\e[2m"

if [[ $direction == "down" ]]; then
  ssh $ap netperf -H $ip -l $testlength -D $printinterval | tee perf.log
else
  netperf -H $ap -l $testlength -D $printinterval | tee perf.log
fi

echo -ne "\e[0m"
echo -e "\e[37m################################################\e[0m"

echo -e "\e[37m# Test done!\e[0m"


echo -en "\e[37m#\e[0m Stopping services..."
sudo pkill tcpdump
pkill netserver
echo -e "\e[37m done\e[0m"

echo -en "\e[37m#\e[0m Compressing dump..."
gzip -8 tcp.dump
echo -e "\e[37m done\e[0m"

if [[ $both == 'yes' ]]; then
  $base/mp-run $testname down no
fi
