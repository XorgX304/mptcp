#!/bin/bash
base=`dirname $0`
base=`realpath $base`
source "$base/common.sh"

updown=$(updown ".")
isseq=$(isseq ".")

if [[ $isseq -eq 1 ]]; then
  cmd="$base/mp-cdf"
else
  cmd="$base/mp-cdf-raw"
fi
cmdb="$(basename "$cmd")"

if [[ $1 == "-h" ]]; then
  echo "Usage: $(basename "$0") [--single] [--parallel] [--mptcp] [--one] [AP...]"
  echo -n "The --single, --parallel and --mptcp flags will make the resulting"
  echo -n " plot contain only lines corresponding to the passed options. If"
  echo    " none of the flags are passed, all are enabled"
  echo -n "The --one flag will force $(basename "$0") to display all results in"
  echo    " a single graph, even if it would normally have showed one per ap"
  exit 0
fi

single=0
parallel=0
mptcp=0
one=0

while [[ $1 =~ ^-- ]]; do
  opt=${1#--}
  eval $opt=1
  shift
done

if ((single + parallel + mptcp == 0)); then
  single=1
  parallel=1
  mptcp=1
fi

if [[ $isseq -eq 0 ]]; then
  for d in ./*-$updown; do
    "$base"/mp-analyze "$d"
  done

  "$cmd" ./*-$updown/w*.dat
  exit
fi

if [[ $# -eq 0 ]]; then
  args="$(cat ./*/iwconfig.log 2>&1 | grep "ESSID:\"" | grep -- "-wifi\"" | sed 's/^.*ESSID:"\([^"]*\)-wifi".*/\1/' | sort | uniq)"
  args=($args)
else
  args=("$@")
fi

cargs=()
for ap in "${args[@]}"; do
  suffix="$(suffix "." "$updown" "$ap")"
  if [[ -z "$suffix" ]]; then
    continue
  fi

  for dir in *[-@]$suffix-$updown; do
    # Skip unwanted tests
    [[ $single -eq 0 && $dir =~ single ]] && continue
    [[ $mptcp -eq 0 && $dir =~ mptcp ]] && continue
    [[ $parallel -eq 0 && $dir =~ parallel ]] && continue

    if [[ $cmdb == "mp-cdf-raw" ]]; then
      ifs="$(ap2if "$dir" "$ap")"
      ifs=($ifs)
      for i in "${ifs[@]}"; do
        cargs+=("$dir/$i.dat")
      done
    else
      cargs+=("$dir")
      cargs+=("$ap")
    fi
  done

  if [[ $one -eq 0 ]]; then
    echo "$cmdb ${cargs[@]}"
    "$cmd" "${cargs[@]}"
    cargs=()
  fi
done

if [[ ${#cargs} -gt 0 ]]; then
  echo "$cmdb ${cargs[@]}"
  "$cmd" "${cargs[@]}"
fi
# vim:textwidth=0:
