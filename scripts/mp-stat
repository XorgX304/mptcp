#!/bin/bash
base=`dirname $0`
base=`realpath $base`

ci=1.96
hasci=`echo "$#%2" | bc`
if [[ $hasci -eq 1 ]]; then
  # get last argument
  # http://stackoverflow.com/questions/1853946/getting-the-last-argument-passed-to-a-shell-script
  for cit; do true; done
  # determine z factor
  if [[ $cit == '90' ]]; then
    ci="1.645"
  elif [[ $cit == '95' ]]; then
    ci="1.96"
  elif [[ $cit == '98' ]]; then
    ci="2.33"
  elif [[ $cit == '99' ]]; then
    ci="2.58"
  else
    echo "Unknown confidence interval given, using 95%"
    cit="95"
  fi
else
  cit="95"
fi

runr() {
  if [[ $1 == ${1/-up//} ]]; then
    # down
    f=17
  else
    # up
    f=16
  fi

  cut -d' ' -f$f "$1/$2.dat" | \
    # http://stackoverflow.com/questions/16493669/how-to-read-input-from-the-terminal-using-dev-stdin-and-read-csv
    R -q -e "x <- read.csv(file='stdin', header = F); summary(x); sd(x[ , 1])" | \
    grep -v ">" | grep -v "V1" | sed -e 's/\[1\] / Stddev.:/'
}

# http://www.linuxquestions.org/questions/programming-9/processing-command-args-in-bash-367563/
while true; do
  # ci can't be parsed
  if [[ $# -eq 1 ]]; then break; fi

  if [ $1 ]; then
    nm="$1"
    if="$2"

    shift
    shift

    if [[ ! -e "$nm/$if.dat" ]]; then
      echo "mp-analyze has not been run for $nm"
      continue
    fi

    r=`runr "$nm" "$if"`
    mn=`echo "$r" | grep "Mean"   | sed 's/.*: *\([0-9\.]*\).*/\1/'`
    sd=`echo "$r" | grep "Stddev" | sed 's/.*: *\([0-9\.]*\).*/\1/'`
    no=`cat "$nm/$if.dat" | wc -l`
    cis=`echo "$mn - $ci*($sd/sqrt($no))" | bc`
    cie=`echo "$mn + $ci*($sd/sqrt($no))" | bc`

    nm=`basename $nm`
    echo -e "$cit% CI for $if in $nm:\t$cis - $cie"
  else
    break; # no more args
  fi
done
