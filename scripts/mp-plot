#!/bin/bash
base="$(dirname "$0")"
base="$(realpath "$base")"
source "$base/common.sh"

dir="$1"
testname="$(basename "$dir")"
cd "$1"

[[ -e test.txt ]] || { echo "Given test directory is not valid"; exit 1; }
tests=(*.dat)

"$base/mp-analyze" .
if [[ $? -gt 0 ]]; then
  echo "Failed to analyze data - invalid test?"
  exit 1
fi

int=$(cat test.txt | grep interrupt | wc -l)

begin=$(head -n1 *.dat | tail -n1 | cut -d' ' -f1)
end=$(tail -n1 *.dat | tail -n1 | cut -d' ' -f1)
dur=$(echo "$end-$begin" | bc)

s="
set xlabel 'seconds'
set grid
set xrange [0:$dur]
set yrange [0:100]
set offset graph 0.02
set key right top
set title '$testname'

set style line 1 lt 1 lc rgb \"red\"
set style line 2 lt 2 lc rgb \"royalblue\"
set style line 3 lt 3 lc rgb \"orange-red\"
set style line 4 lt 4 lc rgb \"dark-blue\"
set style line 5 lt 5 lc rgb \"dark-orange\"
set style line 6 lt 6 lc rgb \"magenta\"
set style line 7 lt 7 lc rgb \"blue\"
set style line 8 lt 8 lc rgb \"dark-red\"
set style line 9 lt 9 lc rgb \"gray\"
set style line 10 lt 10 lc rgb \"forest-green\"
set style line 11 lt 11 lc rgb \"black\"
set style line 12 lt 12 lc rgb \"dark-magenta\"
set style line 13 lt 13 lc rgb \"dark-gray\"

plot \\"

o="1"
title=""
for f in *.dat; do
  [[ $f =~ cdf|totals ]] && continue

  f="$(realpath "$f")"
  fbase="$(basename "$f")"
  begin=$(head -n1 "$f" | cut -d' ' -f1)
  end=$(tail -n1 "$f" | cut -d' ' -f1)
  ap="$(if2ap "." "${fbase%.dat}")"
  if [[ $ap == "$title" ]]; then
    title="$ap (2)"
  else
    title="$ap"
  fi

  if [[ -z $(echo "$1" | grep -- "-down") ]]; then
    if ((int == 0)); then
      io="'$f' using (\$1-$begin):(\$9/1024/10) title '$title sendq' with lines ls ($o+7), \\
          '$f' using (\$1-$begin):(\$10/10) title '$title rtt' with lines ls ($o+4), \\
          '$f' using (\$1-$begin):(1428*\$12/1024/10) title '$title cwnd' with lines ls ($o+5), \\
          '$f' using (\$1-$begin):(80+\$13/5) title '$title utilization' with lines ls ($o+5), \\
          '$f' using (\$1-$begin):(8*\$15/1000000) title '$title throughput' with lines ls ($o+6), "
    else
      io="'$f' using (\$1-$begin):(80+\$13/5) title '$title utilization' with lines ls ($o+5), \\
          '$f' using (\$1-$begin):(8*\$15/1000000) title '$title throughput' with lines ls ($o+6), "
    fi
  else
    if ((int == 0)); then
      io="'$f' using (\$1-$begin):(\$8) title '$title recvq' with lines ls ($o+7), \\
          '$f' using (\$1-$begin):(\$11/10) title '$title rtt' with lines ls ($o+4), \\
          '$f' using (\$1-$begin):(80+\$14/5) title '$title utilization' with lines ls ($o+5), \\
          '$f' using (\$1-$begin):(8*\$16/1000000) title '$title throughput' with lines ls ($o+6), "
    else
      io="'$f' using (\$1-$begin):(80+\$14/5) title '$title utilization' with lines ls ($o+5), \\
          '$f' using (\$1-$begin):(8*\$16/1000000) title '$title throughput' with lines ls ($o+6), "
    fi
  fi

  s="$s
    '$f' using (\$1-$begin):2 title '$title bitrate' with lines ls ($o), \\
    '$f' using (\$1-$begin):(100+\$3) title '$title signal' with lines ls ($o+1), \\
    '$f' using (\$1-$begin):4 title '$title tx-fail' with lines ls ($o+2), \\
    '$f' using (\$1-$begin):5 title '$title rx-drop' with lines ls ($o+3), \\
    $io \\"
  ((o+=1))
done

f="$(realpath "$(ls *.dat | grep -vE "cdf|totals" | head -n1)")"
s="$s
  '$f' using (\$1-$begin):6 title 'fast-rt' with lines ls 9, \\
  '$f' using (\$1-$begin):7 title 'timeout' with lines ls 10, \\
  "

f="$(realpath totals.dat)"
if [[ -z "$(echo "$1" | grep -- "-down")" ]]; then
  s="$s '$f' using (\$1-$begin):(8*\$2/1000000) title 'total out' with lines ls 11"
else
  s="$s '$f' using (\$1-$begin):(8*\$3/1000000) title 'total in' with lines ls 11"
fi

s="$(echo "$s" | sed 's|/home/[^/]*/|~/|g')"
echo "$s" | gnuplot -p - > /dev/null 2>&1
echo "$s"

# vim:textwidth=0:
