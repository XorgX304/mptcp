#!/bin/bash
base=`dirname $0`
base=`realpath $base`
source "$base/common.sh"

if [[ $# -eq 0 ]]; then
  echo "Usage: `basename $0` [-n] UP|DOWN [SET-FOLDER AP]..."
  echo
  echo -n "For each SET-FOLDER/AP pair, merges single, parallel and mptcp"
  echo -n " readings for the interface connected to AP with that of the"
  echo    " corresponding tests in the other SET-FOLDERs"
  echo -n "If the -n flag is given, the merged files will contain only"
  echo    " \"normalized\" throughput values"
  echo "Outputs data into the files {single,parallel,mptcp}-{up,down}.dat"
  exit 1
fi

normalize=0
if [[ $1 == "-n" ]]; then
  normalize=1
  shift
fi

updown="$1"
shift

for t in single parallel mptcp; do
  touch $t-$updown.dat
done

datadir=`realpath ~/Dropbox/MPTCP/data/`
while true; do
  if [[ $# -lt 2 ]]; then break; fi

  setdir="$1"
  setname=`echo "$setdir" | sed "s|^$datadir/*||"`
  ap="$2"
  shift
  shift

  suffix=`suffix "$setdir" "$updown" "$ap"`
  if [[ -z "$suffix" ]]; then
    echo -e "\e[31mFailed to find a suffix for $ap-wifi in set '$setname'\e[0m" >> /dev/stderr
    continue
  fi

  drs=()
  for t in single parallel mptcp; do
    if [[ $t == "mptcp" ]]; then
      dir=`ls -d "$setdir"/*mptcp*@$suffix-$updown 2>/dev/null`
      if [[ -z $dir ]]; then
        dir=`ls -d "$setdir"/*mptcp*-$updown 2>/dev/null`
      fi
    else
      dir=`ls -d "$setdir"/*$t*-$suffix-$updown 2>/dev/null`
    fi

    if [[ -z $dir ]]; then
      if [[ $t != "single" ]]; then
        echo -e "\e[33mFailed to find $t@$suffix in set '$setname'\e[0m" >> /dev/stderr
      fi
      continue;
    fi

    if=`ap21if "$dir" "$ap"`
    if [[ -z $if ]]; then
      echo -e "\e[31mFailed to find $t directory for $ap-wifi in set '$setname'\e[0m" >> /dev/stderr
      continue;
    fi

    if [[ ! -e "$dir/$if.dat" ]]; then
      $base/mp-analyze "$dir" > /dev/null
    fi

    echo -e "  -> Merging \e[37m$if\e[0m from \e[37m`basename $dir`\e[0m into \e[37m$t.dat\e[0m"
    drs+=("$dir/$if.dat" "$t-$updown.dat")
  done

  if [[ $normalize -eq 1 ]]; then
    echo -en "  -> Calculating normalizing offset for set: "

    meds=()
    for dir in `ls -d "$setdir"/*-$updown`; do
      for iface in `ls "$dir"/*.dat | grep -vE "total|cdf"`; do
        f=`bpsf "$iface"`
        lines=`cat "$iface" | wc -l | sed 's/$/\/2/' | bc`
        med=`cut -d' ' -f$f "$iface" | sort | head -n $lines | tail -n 1`
        meds+=($med)
      done
    done

    avgmed=`(for m in ${meds[@]}; do echo $m; done) | paste -sd+`
    avgmed=`echo -e "scale=1\n($avgmed)/${#meds[@]}" | bc`
    echo -e "\e[37m$avgmed\e[0m"
  fi

  echo "  -> Merging normalized data"
  i=0
  while [[ $i -lt ${#drs[@]} ]]; do
    file=${drs[$i]}
    out=${drs[$i+1]}
    if [ $normalize -eq 1 ]; then
      f=`bpsf "$file"`
      cut -d' ' -f$f "$file" | sed "s/\$/-$avgmed/" | sed '1 i\
        scale=1' | bc >> "$out"
    else
      cat "$d/$if.dat" >> "$out"
    fi
    i+=2
  done
done

# vim:textwidth=0:
